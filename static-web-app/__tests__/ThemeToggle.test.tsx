import { render, screen, fireEvent } from '@testing-library/react';import { ThemeToggle } from '@/components/ui';import { ThemeContext } from '@/components/ui/ThemeProvider';const mockSetTheme = jest.fn();const ThemeWrapper = ({ children }) => {  return (    <ThemeContext.Provider value={{ theme: 'light', setTheme: mockSetTheme }}>      {children}    </ThemeContext.Provider>  );};describe('ThemeToggle component', () => {  beforeEach(() => {    jest.clearAllMocks();  });  it('renders theme toggle button', () => {    render(      <ThemeWrapper>        <ThemeToggle />      </ThemeWrapper>    );    const button = screen.getByRole('button', { name: /switch to system mode/i });    expect(button).toBeInTheDocument();  });  it('calls toggleTheme when clicked', () => {    render(      <ThemeWrapper>        <ThemeToggle />      </ThemeWrapper>    );    const button = screen.getByRole('button', { name: /switch to system mode/i });    fireEvent.click(button);    expect(mockSetTheme).toHaveBeenCalledTimes(1);    expect(mockSetTheme).toHaveBeenCalledWith('system');  });  it('has proper accessibility attributes', () => {    render(      <ThemeWrapper>        <ThemeToggle />      </ThemeWrapper>    );    const button = screen.getByRole('button', { name: /switch to system mode/i });    expect(button).toHaveAttribute('aria-label', 'Switch to system mode');  });});