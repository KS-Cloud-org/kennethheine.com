name: Test Coverage

on:
  push:
    branches: [ main, develop ]
    paths: [ 'static-web-app/**', '!static-web-app/README.md' ]
  pull_request:
    branches: [ main ]
    paths: [ 'static-web-app/**', '!static-web-app/README.md' ]

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./static-web-app
        
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: static-web-app/package-lock.json
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🧪 Run tests with coverage
        run: npm run test:coverage
        
      - name: 📊 Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: static-web-app/coverage
          flags: unittests
          name: kennethheine-coverage
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          
      - name: 📋 Coverage Summary
        run: |
          echo "## 📊 Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Coverage report generated and uploaded to Codecov." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/lcov-report/index.html ]; then
            echo "✅ HTML coverage report available in artifacts" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: 📁 Upload coverage artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: static-web-app/coverage/
          retention-days: 30